{"id":"node_modules/opentype.js/src/tables/gsub.js","dependencies":[{"name":"C:\\Users\\student\\code\\airbnb-clone\\package.json","includedInParent":true,"mtime":1603166701328},{"name":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\package.json","includedInParent":true,"mtime":1603166700396},{"name":"../check","loc":{"line":6,"column":20},"parent":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\tables\\gsub.js","resolved":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\check.js"},{"name":"../parse","loc":{"line":7,"column":21},"parent":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\tables\\gsub.js","resolved":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\parse.js"},{"name":"../table","loc":{"line":9,"column":20},"parent":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\tables\\gsub.js","resolved":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\table.js"}],"generated":{"js":"// The `GSUB` table contains ligatures, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\n\n'use strict';\n\nvar check = require('../check');\nvar Parser = require('../parse').Parser;\nvar subtableParsers = new Array(9);         // subtableParsers[0] is unused\nvar table = require('../table');\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#SS\nsubtableParsers[1] = function parseLookup1() {\n    var start = this.offset + this.relativeOffset;\n    var substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            deltaGlyphId: this.parseUShort()\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            substitute: this.parseOffset16List()\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 1 format must be 1 or 2.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#MS\nsubtableParsers[2] = function parseLookup2() {\n    var substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Multiple Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        sequences: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#AS\nsubtableParsers[3] = function parseLookup3() {\n    var substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Alternate Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        alternateSets: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#LS\nsubtableParsers[4] = function parseLookup4() {\n    var substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB ligature table identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        ligatureSets: this.parseListOfLists(function() {\n            return {\n                ligGlyph: this.parseUShort(),\n                components: this.parseUShortList(this.parseUShort() - 1)\n            };\n        })\n    };\n};\n\nvar lookupRecordDesc = {\n    sequenceIndex: Parser.uShort,\n    lookupListIndex: Parser.uShort\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CSF\nsubtableParsers[5] = function parseLookup5() {\n    var start = this.offset + this.relativeOffset;\n    var substFormat = this.parseUShort();\n\n    if (substFormat === 1) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            ruleSets: this.parseListOfLists(function() {\n                var glyphCount = this.parseUShort();\n                var substCount = this.parseUShort();\n                return {\n                    input: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            classDef: this.parsePointer(Parser.classDef),\n            classSets: this.parseListOfLists(function() {\n                var glyphCount = this.parseUShort();\n                var substCount = this.parseUShort();\n                return {\n                    classes: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        var glyphCount = this.parseUShort();\n        var substCount = this.parseUShort();\n        return {\n            substFormat: substFormat,\n            coverages: this.parseList(glyphCount, Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 5 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CC\nsubtableParsers[6] = function parseLookup6() {\n    var start = this.offset + this.relativeOffset;\n    var substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            chainRuleSets: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            backtrackClassDef: this.parsePointer(Parser.classDef),\n            inputClassDef: this.parsePointer(Parser.classDef),\n            lookaheadClassDef: this.parsePointer(Parser.classDef),\n            chainClassSet: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        return {\n            substFormat: 3,\n            backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            inputCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 6 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#ES\nsubtableParsers[7] = function parseLookup7() {\n    // Extension Substitution subtable\n    var substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Extension Substitution subtable identifier-format must be 1');\n    var extensionLookupType = this.parseUShort();\n    var extensionParser = new Parser(this.data, this.offset + this.parseULong());\n    return {\n        substFormat: 1,\n        lookupType: extensionLookupType,\n        extension: subtableParsers[extensionLookupType].call(extensionParser)\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#RCCS\nsubtableParsers[8] = function parseLookup8() {\n    var substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        substitutes: this.parseUShortList()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\nfunction parseGsubTable(data, start) {\n    start = start || 0;\n    var p = new Parser(data, start);\n    var tableVersion = p.parseVersion();\n    check.argument(tableVersion === 1, 'Unsupported GSUB table version.');\n    return {\n        version: tableVersion,\n        scripts: p.parseScriptList(),\n        features: p.parseFeatureList(),\n        lookups: p.parseLookupList(subtableParsers)\n    };\n}\n\n// GSUB Writing //////////////////////////////////////////////\nvar subtableMakers = new Array(9);\n\nsubtableMakers[1] = function makeLookup1(subtable) {\n    if (subtable.substFormat === 1) {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 1},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)},\n            {name: 'deltaGlyphID', type: 'USHORT', value: subtable.deltaGlyphId}\n        ]);\n    } else {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 2},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n        ].concat(table.ushortList('substitute', subtable.substitute)));\n    }\n    check.fail('Lookup type 1 substFormat must be 1 or 2.');\n};\n\nsubtableMakers[3] = function makeLookup3(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 3 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('altSet', subtable.alternateSets, function(alternateSet) {\n        return new table.Table('alternateSetTable', table.ushortList('alternate', alternateSet));\n    })));\n};\n\nsubtableMakers[4] = function makeLookup4(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 4 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('ligSet', subtable.ligatureSets, function(ligatureSet) {\n        return new table.Table('ligatureSetTable', table.tableList('ligature', ligatureSet, function(ligature) {\n            return new table.Table('ligatureTable',\n                [{name: 'ligGlyph', type: 'USHORT', value: ligature.ligGlyph}]\n                .concat(table.ushortList('component', ligature.components, ligature.components.length + 1))\n            );\n        }));\n    })));\n};\n\nfunction makeGsubTable(gsub) {\n    return new table.Table('GSUB', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'scripts', type: 'TABLE', value: new table.ScriptList(gsub.scripts)},\n        {name: 'features', type: 'TABLE', value: new table.FeatureList(gsub.features)},\n        {name: 'lookups', type: 'TABLE', value: new table.LookupList(gsub.lookups, subtableMakers)}\n    ]);\n}\n\nexports.parse = parseGsubTable;\nexports.make = makeGsubTable;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/opentype.js/src/tables/gsub.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}}],"sources":{"node_modules/opentype.js/src/tables/gsub.js":"// The `GSUB` table contains ligatures, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\n\n'use strict';\n\nvar check = require('../check');\nvar Parser = require('../parse').Parser;\nvar subtableParsers = new Array(9);         // subtableParsers[0] is unused\nvar table = require('../table');\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#SS\nsubtableParsers[1] = function parseLookup1() {\n    var start = this.offset + this.relativeOffset;\n    var substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            deltaGlyphId: this.parseUShort()\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            substitute: this.parseOffset16List()\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 1 format must be 1 or 2.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#MS\nsubtableParsers[2] = function parseLookup2() {\n    var substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Multiple Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        sequences: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#AS\nsubtableParsers[3] = function parseLookup3() {\n    var substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Alternate Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        alternateSets: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#LS\nsubtableParsers[4] = function parseLookup4() {\n    var substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB ligature table identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        ligatureSets: this.parseListOfLists(function() {\n            return {\n                ligGlyph: this.parseUShort(),\n                components: this.parseUShortList(this.parseUShort() - 1)\n            };\n        })\n    };\n};\n\nvar lookupRecordDesc = {\n    sequenceIndex: Parser.uShort,\n    lookupListIndex: Parser.uShort\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CSF\nsubtableParsers[5] = function parseLookup5() {\n    var start = this.offset + this.relativeOffset;\n    var substFormat = this.parseUShort();\n\n    if (substFormat === 1) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            ruleSets: this.parseListOfLists(function() {\n                var glyphCount = this.parseUShort();\n                var substCount = this.parseUShort();\n                return {\n                    input: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            classDef: this.parsePointer(Parser.classDef),\n            classSets: this.parseListOfLists(function() {\n                var glyphCount = this.parseUShort();\n                var substCount = this.parseUShort();\n                return {\n                    classes: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        var glyphCount = this.parseUShort();\n        var substCount = this.parseUShort();\n        return {\n            substFormat: substFormat,\n            coverages: this.parseList(glyphCount, Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 5 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CC\nsubtableParsers[6] = function parseLookup6() {\n    var start = this.offset + this.relativeOffset;\n    var substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            chainRuleSets: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            backtrackClassDef: this.parsePointer(Parser.classDef),\n            inputClassDef: this.parsePointer(Parser.classDef),\n            lookaheadClassDef: this.parsePointer(Parser.classDef),\n            chainClassSet: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        return {\n            substFormat: 3,\n            backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            inputCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 6 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#ES\nsubtableParsers[7] = function parseLookup7() {\n    // Extension Substitution subtable\n    var substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Extension Substitution subtable identifier-format must be 1');\n    var extensionLookupType = this.parseUShort();\n    var extensionParser = new Parser(this.data, this.offset + this.parseULong());\n    return {\n        substFormat: 1,\n        lookupType: extensionLookupType,\n        extension: subtableParsers[extensionLookupType].call(extensionParser)\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#RCCS\nsubtableParsers[8] = function parseLookup8() {\n    var substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        substitutes: this.parseUShortList()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\nfunction parseGsubTable(data, start) {\n    start = start || 0;\n    var p = new Parser(data, start);\n    var tableVersion = p.parseVersion();\n    check.argument(tableVersion === 1, 'Unsupported GSUB table version.');\n    return {\n        version: tableVersion,\n        scripts: p.parseScriptList(),\n        features: p.parseFeatureList(),\n        lookups: p.parseLookupList(subtableParsers)\n    };\n}\n\n// GSUB Writing //////////////////////////////////////////////\nvar subtableMakers = new Array(9);\n\nsubtableMakers[1] = function makeLookup1(subtable) {\n    if (subtable.substFormat === 1) {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 1},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)},\n            {name: 'deltaGlyphID', type: 'USHORT', value: subtable.deltaGlyphId}\n        ]);\n    } else {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 2},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n        ].concat(table.ushortList('substitute', subtable.substitute)));\n    }\n    check.fail('Lookup type 1 substFormat must be 1 or 2.');\n};\n\nsubtableMakers[3] = function makeLookup3(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 3 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('altSet', subtable.alternateSets, function(alternateSet) {\n        return new table.Table('alternateSetTable', table.ushortList('alternate', alternateSet));\n    })));\n};\n\nsubtableMakers[4] = function makeLookup4(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 4 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('ligSet', subtable.ligatureSets, function(ligatureSet) {\n        return new table.Table('ligatureSetTable', table.tableList('ligature', ligatureSet, function(ligature) {\n            return new table.Table('ligatureTable',\n                [{name: 'ligGlyph', type: 'USHORT', value: ligature.ligGlyph}]\n                .concat(table.ushortList('component', ligature.components, ligature.components.length + 1))\n            );\n        }));\n    })));\n};\n\nfunction makeGsubTable(gsub) {\n    return new table.Table('GSUB', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'scripts', type: 'TABLE', value: new table.ScriptList(gsub.scripts)},\n        {name: 'features', type: 'TABLE', value: new table.FeatureList(gsub.features)},\n        {name: 'lookups', type: 'TABLE', value: new table.LookupList(gsub.lookups, subtableMakers)}\n    ]);\n}\n\nexports.parse = parseGsubTable;\nexports.make = makeGsubTable;\n"},"lineCount":259}},"error":null,"hash":"4cfc25847b37c1aa1742e923ee70b8df","cacheData":{"env":{}}}