{"id":"node_modules/opentype.js/src/glyphset.js","dependencies":[{"name":"C:\\Users\\student\\code\\airbnb-clone\\package.json","includedInParent":true,"mtime":1603166701328},{"name":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\package.json","includedInParent":true,"mtime":1603166700396},{"name":"./glyph","loc":{"line":5,"column":21},"parent":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\glyphset.js","resolved":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\glyph.js"}],"generated":{"js":"// The GlyphSet object\n\n'use strict';\n\nvar _glyph = require('./glyph');\n\n// Define a property on the glyph that depends on the path being loaded.\nfunction defineDependentProperty(glyph, externalName, internalName) {\n    Object.defineProperty(glyph, externalName, {\n        get: function() {\n            // Request the path property to make sure the path is loaded.\n            glyph.path; // jshint ignore:line\n            return glyph[internalName];\n        },\n        set: function(newValue) {\n            glyph[internalName] = newValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n}\n\n/**\n * A GlyphSet represents all glyphs available in the font, but modelled using\n * a deferred glyph loader, for retrieving glyphs only once they are absolutely\n * necessary, to keep the memory footprint down.\n * @exports opentype.GlyphSet\n * @class\n * @param {opentype.Font}\n * @param {Array}\n */\nfunction GlyphSet(font, glyphs) {\n    this.font = font;\n    this.glyphs = {};\n    if (Array.isArray(glyphs)) {\n        for (var i = 0; i < glyphs.length; i++) {\n            this.glyphs[i] = glyphs[i];\n        }\n    }\n\n    this.length = (glyphs && glyphs.length) || 0;\n}\n\n/**\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nGlyphSet.prototype.get = function(index) {\n    if (typeof this.glyphs[index] === 'function') {\n        this.glyphs[index] = this.glyphs[index]();\n    }\n\n    return this.glyphs[index];\n};\n\n/**\n * @param  {number} index\n * @param  {Object}\n */\nGlyphSet.prototype.push = function(index, loader) {\n    this.glyphs[index] = loader;\n    this.length++;\n};\n\n/**\n * @alias opentype.glyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nfunction glyphLoader(font, index) {\n    return new _glyph.Glyph({index: index, font: font});\n}\n\n/**\n * Generate a stub glyph that can be filled with all metadata *except*\n * the \"points\" and \"path\" properties, which must be loaded only once\n * the glyph's path is actually requested for text shaping.\n * @alias opentype.ttfGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseGlyph\n * @param  {Object} data\n * @param  {number} position\n * @param  {Function} buildPath\n * @return {opentype.Glyph}\n */\nfunction ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n    return function() {\n        var glyph = new _glyph.Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            parseGlyph(glyph, data, position);\n            var path = buildPath(font.glyphs, glyph);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        defineDependentProperty(glyph, 'xMin', '_xMin');\n        defineDependentProperty(glyph, 'xMax', '_xMax');\n        defineDependentProperty(glyph, 'yMin', '_yMin');\n        defineDependentProperty(glyph, 'yMax', '_yMax');\n\n        return glyph;\n    };\n}\n/**\n * @alias opentype.cffGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseCFFCharstring\n * @param  {string} charstring\n * @return {opentype.Glyph}\n */\nfunction cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n    return function() {\n        var glyph = new _glyph.Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            var path = parseCFFCharstring(font, glyph, charstring);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nexports.GlyphSet = GlyphSet;\nexports.glyphLoader = glyphLoader;\nexports.ttfGlyphLoader = ttfGlyphLoader;\nexports.cffGlyphLoader = cffGlyphLoader;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/opentype.js/src/glyphset.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}}],"sources":{"node_modules/opentype.js/src/glyphset.js":"// The GlyphSet object\n\n'use strict';\n\nvar _glyph = require('./glyph');\n\n// Define a property on the glyph that depends on the path being loaded.\nfunction defineDependentProperty(glyph, externalName, internalName) {\n    Object.defineProperty(glyph, externalName, {\n        get: function() {\n            // Request the path property to make sure the path is loaded.\n            glyph.path; // jshint ignore:line\n            return glyph[internalName];\n        },\n        set: function(newValue) {\n            glyph[internalName] = newValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n}\n\n/**\n * A GlyphSet represents all glyphs available in the font, but modelled using\n * a deferred glyph loader, for retrieving glyphs only once they are absolutely\n * necessary, to keep the memory footprint down.\n * @exports opentype.GlyphSet\n * @class\n * @param {opentype.Font}\n * @param {Array}\n */\nfunction GlyphSet(font, glyphs) {\n    this.font = font;\n    this.glyphs = {};\n    if (Array.isArray(glyphs)) {\n        for (var i = 0; i < glyphs.length; i++) {\n            this.glyphs[i] = glyphs[i];\n        }\n    }\n\n    this.length = (glyphs && glyphs.length) || 0;\n}\n\n/**\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nGlyphSet.prototype.get = function(index) {\n    if (typeof this.glyphs[index] === 'function') {\n        this.glyphs[index] = this.glyphs[index]();\n    }\n\n    return this.glyphs[index];\n};\n\n/**\n * @param  {number} index\n * @param  {Object}\n */\nGlyphSet.prototype.push = function(index, loader) {\n    this.glyphs[index] = loader;\n    this.length++;\n};\n\n/**\n * @alias opentype.glyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nfunction glyphLoader(font, index) {\n    return new _glyph.Glyph({index: index, font: font});\n}\n\n/**\n * Generate a stub glyph that can be filled with all metadata *except*\n * the \"points\" and \"path\" properties, which must be loaded only once\n * the glyph's path is actually requested for text shaping.\n * @alias opentype.ttfGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseGlyph\n * @param  {Object} data\n * @param  {number} position\n * @param  {Function} buildPath\n * @return {opentype.Glyph}\n */\nfunction ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n    return function() {\n        var glyph = new _glyph.Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            parseGlyph(glyph, data, position);\n            var path = buildPath(font.glyphs, glyph);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        defineDependentProperty(glyph, 'xMin', '_xMin');\n        defineDependentProperty(glyph, 'xMax', '_xMax');\n        defineDependentProperty(glyph, 'yMin', '_yMin');\n        defineDependentProperty(glyph, 'yMax', '_yMax');\n\n        return glyph;\n    };\n}\n/**\n * @alias opentype.cffGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseCFFCharstring\n * @param  {string} charstring\n * @return {opentype.Glyph}\n */\nfunction cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n    return function() {\n        var glyph = new _glyph.Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            var path = parseCFFCharstring(font, glyph, charstring);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nexports.GlyphSet = GlyphSet;\nexports.glyphLoader = glyphLoader;\nexports.ttfGlyphLoader = ttfGlyphLoader;\nexports.cffGlyphLoader = cffGlyphLoader;\n"},"lineCount":133}},"error":null,"hash":"49cb6479fa1d1c655e94d875f4d922bd","cacheData":{"env":{}}}