{"id":"node_modules/opentype.js/src/tables/meta.js","dependencies":[{"name":"C:\\Users\\student\\code\\airbnb-clone\\package.json","includedInParent":true,"mtime":1603166701328},{"name":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\package.json","includedInParent":true,"mtime":1603166700396},{"name":"../types","loc":{"line":6,"column":20},"parent":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\tables\\meta.js","resolved":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\types.js"},{"name":"../check","loc":{"line":8,"column":20},"parent":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\tables\\meta.js","resolved":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\check.js"},{"name":"../parse","loc":{"line":9,"column":20},"parent":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\tables\\meta.js","resolved":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\parse.js"},{"name":"../table","loc":{"line":10,"column":20},"parent":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\tables\\meta.js","resolved":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\table.js"}],"generated":{"js":"// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar types = require('../types');\nvar decode = types.decode;\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the metadata `meta` table.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6meta.html\nfunction parseMetaTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported META table version.');\n    p.parseULong(); // flags - currently unused and set to 0\n    p.parseULong(); // tableOffset\n    var numDataMaps = p.parseULong();\n\n    var tags = {};\n    for (var i = 0; i < numDataMaps; i++) {\n        var tag = p.parseTag();\n        var dataOffset = p.parseULong();\n        var dataLength = p.parseULong();\n        var text = decode.UTF8(data, start + dataOffset, dataLength);\n\n        tags[tag] = text;\n    }\n    return tags;\n}\n\nfunction makeMetaTable(tags) {\n    var numTags = Object.keys(tags).length;\n    var stringPool = '';\n    var stringPoolOffset = 16 + numTags * 12;\n\n    var result = new table.Table('meta', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'offset', type: 'ULONG', value: stringPoolOffset},\n        {name: 'numTags', type: 'ULONG', value: numTags}\n    ]);\n\n    for (var tag in tags) {\n        var pos = stringPool.length;\n        stringPool += tags[tag];\n\n        result.fields.push({name: 'tag ' + tag, type: 'TAG', value: tag});\n        result.fields.push({name: 'offset ' + tag, type: 'ULONG', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + tag, type: 'ULONG', value: tags[tag].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n\n    return result;\n}\n\nexports.parse = parseMetaTable;\nexports.make = makeMetaTable;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/opentype.js/src/tables/meta.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}}],"sources":{"node_modules/opentype.js/src/tables/meta.js":"// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar types = require('../types');\nvar decode = types.decode;\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the metadata `meta` table.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6meta.html\nfunction parseMetaTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported META table version.');\n    p.parseULong(); // flags - currently unused and set to 0\n    p.parseULong(); // tableOffset\n    var numDataMaps = p.parseULong();\n\n    var tags = {};\n    for (var i = 0; i < numDataMaps; i++) {\n        var tag = p.parseTag();\n        var dataOffset = p.parseULong();\n        var dataLength = p.parseULong();\n        var text = decode.UTF8(data, start + dataOffset, dataLength);\n\n        tags[tag] = text;\n    }\n    return tags;\n}\n\nfunction makeMetaTable(tags) {\n    var numTags = Object.keys(tags).length;\n    var stringPool = '';\n    var stringPoolOffset = 16 + numTags * 12;\n\n    var result = new table.Table('meta', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'offset', type: 'ULONG', value: stringPoolOffset},\n        {name: 'numTags', type: 'ULONG', value: numTags}\n    ]);\n\n    for (var tag in tags) {\n        var pos = stringPool.length;\n        stringPool += tags[tag];\n\n        result.fields.push({name: 'tag ' + tag, type: 'TAG', value: tag});\n        result.fields.push({name: 'offset ' + tag, type: 'ULONG', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + tag, type: 'ULONG', value: tags[tag].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n\n    return result;\n}\n\nexports.parse = parseMetaTable;\nexports.make = makeMetaTable;\n"},"lineCount":62}},"error":null,"hash":"ded98cf272c1cb39a3319990953d09de","cacheData":{"env":{}}}