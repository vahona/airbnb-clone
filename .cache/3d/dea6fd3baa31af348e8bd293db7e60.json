{"id":"node_modules/opentype.js/src/types.js","dependencies":[{"name":"C:\\Users\\student\\code\\airbnb-clone\\package.json","includedInParent":true,"mtime":1603166701328},{"name":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\package.json","includedInParent":true,"mtime":1603166700396},{"name":"./check","loc":{"line":8,"column":20},"parent":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\types.js","resolved":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\check.js"}],"generated":{"js":"// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\n/**\n * @exports opentype.decode\n * @class\n */\nvar decode = {};\n/**\n * @exports opentype.encode\n * @class\n */\nvar encode = {};\n/**\n * @exports opentype.sizeOf\n * @class\n */\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n/**\n * Convert an 8-bit unsigned integer to a list of 1 byte.\n * @param {number}\n * @returns {Array}\n */\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n/**\n * @constant\n * @type {number}\n */\nsizeOf.BYTE = constant(1);\n\n/**\n * Convert a 8-bit signed integer to a list of 1 byte.\n * @param {string}\n * @returns {Array}\n */\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.CHAR = constant(1);\n\n/**\n * Convert an ASCII string to a list of bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.CHARARRAY = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b[i] = v.charCodeAt(i);\n    }\n\n    return b;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n/**\n * Convert a 16-bit unsigned integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.USHORT = constant(2);\n\n/**\n * Convert a 16-bit signed integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.SHORT = constant(2);\n\n/**\n * Convert a 24-bit unsigned integer to a list of 3 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.UINT24 = constant(3);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.ULONG = constant(4);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n/**\n * Convert a 32-bit Apple Mac timestamp integer to a list of 8 bytes, 64-bit timestamp.\n * @param {number}\n * @returns {Array}\n */\nencode.LONGDATETIME = function(v) {\n    return [0, 0, 0, 0, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONGDATETIME = constant(8);\n\n/**\n * Convert a 4-char tag to a list of 4 bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\n/**\n * Convert a numeric operand or charstring number to a variable-size list of bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n/**\n * Convert a signed number between -32768 and +32767 to a three-byte value.\n * This ensures we always use three bytes, but is not the most compact format.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER16 = constant(3);\n\n/**\n * Convert a signed number between -(2^31) and +(2^31-1) to a five-byte value.\n * This is useful if you want to be sure you always use four bytes,\n * at the expense of wasting a few bytes for smaller numbers.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER32 = constant(5);\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.REAL = function(v) {\n    var value = v.toString();\n\n    // Some numbers use an epsilon to encode the value. (e.g. JavaScript will store 0.0000001 as 1e-7)\n    // This code converts it back to a number without the epsilon.\n    var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n    if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(v * epsilon) / epsilon).toString();\n    }\n\n    var nibbles = '';\n    var i;\n    var ii;\n    for (i = 0, ii = value.length; i < ii; i += 1) {\n        var c = value[i];\n        if (c === 'e') {\n            nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (c === '.') {\n            nibbles += 'a';\n        } else if (c === '-') {\n            nibbles += 'e';\n        } else {\n            nibbles += c;\n        }\n    }\n\n    nibbles += (nibbles.length & 1) ? 'f' : 'ff';\n    var out = [30];\n    for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n    }\n\n    return out;\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.REAL = function(v) {\n    return encode.REAL(v).length;\n};\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF8 = function(data, offset, numBytes) {\n    var codePoints = [];\n    var numChars = numBytes;\n    for (var j = 0; j < numChars; j++, offset += 1) {\n        codePoints[j] = data.getUint8(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF16 = function(data, offset, numBytes) {\n    var codePoints = [];\n    var numChars = numBytes / 2;\n    for (var j = 0; j < numChars; j++, offset += 2) {\n        codePoints[j] = data.getUint16(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * Convert a JavaScript string to UTF16-BE.\n * @param {string}\n * @returns {Array}\n */\nencode.UTF16 = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        var codepoint = v.charCodeAt(i);\n        b[b.length] = (codepoint >> 8) & 0xFF;\n        b[b.length] = codepoint & 0xFF;\n    }\n\n    return b;\n};\n\n/**\n * @param {string}\n * @returns {number}\n */\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Data for converting old eight-bit Macintosh encodings to Unicode.\n// This representation is optimized for decoding; encoding is slower\n// and needs more memory. The assumption is that all opentype.js users\n// want to open fonts, but saving a font will be comperatively rare\n// so it can be more expensive. Keyed by IANA character set name.\n//\n// Python script for generating these strings:\n//\n//     s = u''.join([chr(c).decode('mac_greek') for c in range(128, 256)])\n//     print(s.encode('utf-8'))\n/**\n * @private\n */\nvar eightBitMacEncodings = {\n    'x-mac-croatian':  // Python: 'mac_croatian'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø' +\n        '¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n    'x-mac-cyrillic':  // Python: 'mac_cyrillic'\n        'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњ' +\n        'јЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю',\n    'x-mac-gaelic':\n        // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/GAELIC.TXT\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæø' +\n        'ṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n    'x-mac-greek':  // Python: 'mac_greek'\n        'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩ' +\n        'άΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n    'x-mac-icelandic':  // Python: 'mac_iceland'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-inuit':\n        // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/INUIT.TXT\n        'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗ' +\n        'ᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n    'x-mac-ce':  // Python: 'mac_latin2'\n        'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅ' +\n        'ņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n    macintosh:  // Python: 'mac_roman'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-romanian':  // Python: 'mac_romanian'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-turkish':  // Python: 'mac_turkish'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\n/**\n * Decodes an old-style Macintosh string. Returns either a Unicode JavaScript\n * string, or 'undefined' if the encoding is unsupported. For example, we do\n * not support Chinese, Japanese or Korean because these would need large\n * mapping tables.\n * @param {DataView} dataView\n * @param {number} offset\n * @param {number} dataLength\n * @param {string} encoding\n * @returns {string}\n */\ndecode.MACSTRING = function(dataView, offset, dataLength, encoding) {\n    var table = eightBitMacEncodings[encoding];\n    if (table === undefined) {\n        return undefined;\n    }\n\n    var result = '';\n    for (var i = 0; i < dataLength; i++) {\n        var c = dataView.getUint8(offset + i);\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c <= 0x7F) {\n            result += String.fromCharCode(c);\n        } else {\n            result += table[c & 0x7F];\n        }\n    }\n\n    return result;\n};\n\n// Helper function for encode.MACSTRING. Returns a dictionary for mapping\n// Unicode character codes to their 8-bit MacOS equivalent. This table\n// is not exactly a super cheap data structure, but we do not care because\n// encoding Macintosh strings is only rarely needed in typical applications.\nvar macEncodingTableCache = typeof WeakMap === 'function' && new WeakMap();\nvar macEncodingCacheKeys;\nvar getMacEncodingTable = function(encoding) {\n    // Since we use encoding as a cache key for WeakMap, it has to be\n    // a String object and not a literal. And at least on NodeJS 2.10.1,\n    // WeakMap requires that the same String instance is passed for cache hits.\n    if (!macEncodingCacheKeys) {\n        macEncodingCacheKeys = {};\n        for (var e in eightBitMacEncodings) {\n            /*jshint -W053 */  // Suppress \"Do not use String as a constructor.\"\n            macEncodingCacheKeys[e] = new String(e);\n        }\n    }\n\n    var cacheKey = macEncodingCacheKeys[encoding];\n    if (cacheKey === undefined) {\n        return undefined;\n    }\n\n    // We can't do \"if (cache.has(key)) {return cache.get(key)}\" here:\n    // since garbage collection may run at any time, it could also kick in\n    // between the calls to cache.has() and cache.get(). In that case,\n    // we would return 'undefined' even though we do support the encoding.\n    if (macEncodingTableCache) {\n        var cachedTable = macEncodingTableCache.get(cacheKey);\n        if (cachedTable !== undefined) {\n            return cachedTable;\n        }\n    }\n\n    var decodingTable = eightBitMacEncodings[encoding];\n    if (decodingTable === undefined) {\n        return undefined;\n    }\n\n    var encodingTable = {};\n    for (var i = 0; i < decodingTable.length; i++) {\n        encodingTable[decodingTable.charCodeAt(i)] = i + 0x80;\n    }\n\n    if (macEncodingTableCache) {\n        macEncodingTableCache.set(cacheKey, encodingTable);\n    }\n\n    return encodingTable;\n};\n\n/**\n * Encodes an old-style Macintosh string. Returns a byte array upon success.\n * If the requested encoding is unsupported, or if the input string contains\n * a character that cannot be expressed in the encoding, the function returns\n * 'undefined'.\n * @param {string} str\n * @param {string} encoding\n * @returns {Array}\n */\nencode.MACSTRING = function(str, encoding) {\n    var table = getMacEncodingTable(encoding);\n    if (table === undefined) {\n        return undefined;\n    }\n\n    var result = [];\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c >= 0x80) {\n            c = table[c];\n            if (c === undefined) {\n                // str contains a Unicode character that cannot be encoded\n                // in the requested encoding.\n                return undefined;\n            }\n        }\n        result[i] = c;\n        // result.push(c);\n    }\n\n    return result;\n};\n\n/**\n * @param {string} str\n * @param {string} encoding\n * @returns {number}\n */\nsizeOf.MACSTRING = function(str, encoding) {\n    var b = encode.MACSTRING(str, encoding);\n    if (b !== undefined) {\n        return b.length;\n    } else {\n        return 0;\n    }\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\n/**\n * @param {Array} l\n * @returns {Array}\n */\nencode.INDEX = function(l) {\n    var i;\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    var offset = 1; // First offset is always 1.\n    var offsets = [offset];\n    var data = [];\n    for (i = 0; i < l.length; i += 1) {\n        var v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    var encodedOffsets = [];\n    var offSize = (1 + Math.floor(Math.log(offset) / Math.log(2)) / 8) | 0;\n    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        var encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n/**\n * Convert an object to a CFF DICT structure.\n * The keys should be numeric.\n * The values should be objects containing name / type / value.\n * @param {Object} m\n * @returns {Array}\n */\nencode.DICT = function(m) {\n    var d = [];\n    var keys = Object.keys(m);\n    var length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\n/**\n * @param {Array} v\n * @param {string}\n * @returns {Array}\n */\nencode.OPERAND = function(v, type) {\n    var d = [];\n    if (Array.isArray(type)) {\n        for (var i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else if (type === 'number') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'real') {\n            d = d.concat(encode.REAL(v));\n        } else {\n            throw new Error('Unknown operand type ' + type);\n            // FIXME Add support for booleans\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n\n/**\n * Convert a list of CharString operations to bytes.\n * @param {Array}\n * @returns {Array}\n */\nencode.CHARSTRING = function(ops) {\n    // See encode.MACSTRING for why we don't do \"if (wmm && wmm.has(ops))\".\n    if (wmm) {\n        var cachedValue = wmm.get(ops);\n        if (cachedValue !== undefined) {\n            return cachedValue;\n        }\n    }\n\n    var d = [];\n    var length = ops.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n/**\n * Convert an object containing name / type / value to bytes.\n * @param {Object}\n * @returns {Array}\n */\nencode.OBJECT = function(v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.OBJECT = function(v) {\n    var sizeOfFunction = sizeOf[v.type];\n    check.argument(sizeOfFunction !== undefined, 'No sizeOf function for type ' + v.type);\n    return sizeOfFunction(v.value);\n};\n\n/**\n * Convert a table object to bytes.\n * A table contains a list of fields containing the metadata (name, type and default value).\n * The table itself has the field values set as attributes.\n * @param {opentype.Table}\n * @returns {Array}\n */\nencode.TABLE = function(table) {\n    var d = [];\n    var length = table.fields.length;\n    var subtables = [];\n    var subtableOffsets = [];\n    var i;\n\n    for (i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type + ' (' + field.name + ')');\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        var bytes = encodingFunction(value);\n\n        if (field.type === 'TABLE') {\n            subtableOffsets.push(d.length);\n            d = d.concat([0, 0]);\n            subtables.push(bytes);\n        } else {\n            d = d.concat(bytes);\n        }\n    }\n\n    for (i = 0; i < subtables.length; i += 1) {\n        var o = subtableOffsets[i];\n        var offset = d.length;\n        check.argument(offset < 65536, 'Table ' + table.tableName + ' too big.');\n        d[o] = offset >> 8;\n        d[o + 1] = offset & 0xff;\n        d = d.concat(subtables[i]);\n    }\n\n    return d;\n};\n\n/**\n * @param {opentype.Table}\n * @returns {number}\n */\nsizeOf.TABLE = function(table) {\n    var numBytes = 0;\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var sizeOfFunction = sizeOf[field.type];\n        check.argument(sizeOfFunction !== undefined, 'No sizeOf function for field type ' + field.type + ' (' + field.name + ')');\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        numBytes += sizeOfFunction(value);\n\n        // Subtables take 2 more bytes for offsets.\n        if (field.type === 'TABLE') {\n            numBytes += 2;\n        }\n    }\n\n    return numBytes;\n};\n\nencode.RECORD = encode.TABLE;\nsizeOf.RECORD = sizeOf.TABLE;\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/opentype.js/src/types.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/opentype.js/src/types.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}}],"sources":{"node_modules/opentype.js/src/types.js":"// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\n/**\n * @exports opentype.decode\n * @class\n */\nvar decode = {};\n/**\n * @exports opentype.encode\n * @class\n */\nvar encode = {};\n/**\n * @exports opentype.sizeOf\n * @class\n */\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n/**\n * Convert an 8-bit unsigned integer to a list of 1 byte.\n * @param {number}\n * @returns {Array}\n */\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n/**\n * @constant\n * @type {number}\n */\nsizeOf.BYTE = constant(1);\n\n/**\n * Convert a 8-bit signed integer to a list of 1 byte.\n * @param {string}\n * @returns {Array}\n */\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.CHAR = constant(1);\n\n/**\n * Convert an ASCII string to a list of bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.CHARARRAY = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b[i] = v.charCodeAt(i);\n    }\n\n    return b;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n/**\n * Convert a 16-bit unsigned integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.USHORT = constant(2);\n\n/**\n * Convert a 16-bit signed integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.SHORT = constant(2);\n\n/**\n * Convert a 24-bit unsigned integer to a list of 3 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.UINT24 = constant(3);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.ULONG = constant(4);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n/**\n * Convert a 32-bit Apple Mac timestamp integer to a list of 8 bytes, 64-bit timestamp.\n * @param {number}\n * @returns {Array}\n */\nencode.LONGDATETIME = function(v) {\n    return [0, 0, 0, 0, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONGDATETIME = constant(8);\n\n/**\n * Convert a 4-char tag to a list of 4 bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\n/**\n * Convert a numeric operand or charstring number to a variable-size list of bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n/**\n * Convert a signed number between -32768 and +32767 to a three-byte value.\n * This ensures we always use three bytes, but is not the most compact format.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER16 = constant(3);\n\n/**\n * Convert a signed number between -(2^31) and +(2^31-1) to a five-byte value.\n * This is useful if you want to be sure you always use four bytes,\n * at the expense of wasting a few bytes for smaller numbers.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER32 = constant(5);\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.REAL = function(v) {\n    var value = v.toString();\n\n    // Some numbers use an epsilon to encode the value. (e.g. JavaScript will store 0.0000001 as 1e-7)\n    // This code converts it back to a number without the epsilon.\n    var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n    if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(v * epsilon) / epsilon).toString();\n    }\n\n    var nibbles = '';\n    var i;\n    var ii;\n    for (i = 0, ii = value.length; i < ii; i += 1) {\n        var c = value[i];\n        if (c === 'e') {\n            nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (c === '.') {\n            nibbles += 'a';\n        } else if (c === '-') {\n            nibbles += 'e';\n        } else {\n            nibbles += c;\n        }\n    }\n\n    nibbles += (nibbles.length & 1) ? 'f' : 'ff';\n    var out = [30];\n    for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n    }\n\n    return out;\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.REAL = function(v) {\n    return encode.REAL(v).length;\n};\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF8 = function(data, offset, numBytes) {\n    var codePoints = [];\n    var numChars = numBytes;\n    for (var j = 0; j < numChars; j++, offset += 1) {\n        codePoints[j] = data.getUint8(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF16 = function(data, offset, numBytes) {\n    var codePoints = [];\n    var numChars = numBytes / 2;\n    for (var j = 0; j < numChars; j++, offset += 2) {\n        codePoints[j] = data.getUint16(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * Convert a JavaScript string to UTF16-BE.\n * @param {string}\n * @returns {Array}\n */\nencode.UTF16 = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        var codepoint = v.charCodeAt(i);\n        b[b.length] = (codepoint >> 8) & 0xFF;\n        b[b.length] = codepoint & 0xFF;\n    }\n\n    return b;\n};\n\n/**\n * @param {string}\n * @returns {number}\n */\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Data for converting old eight-bit Macintosh encodings to Unicode.\n// This representation is optimized for decoding; encoding is slower\n// and needs more memory. The assumption is that all opentype.js users\n// want to open fonts, but saving a font will be comperatively rare\n// so it can be more expensive. Keyed by IANA character set name.\n//\n// Python script for generating these strings:\n//\n//     s = u''.join([chr(c).decode('mac_greek') for c in range(128, 256)])\n//     print(s.encode('utf-8'))\n/**\n * @private\n */\nvar eightBitMacEncodings = {\n    'x-mac-croatian':  // Python: 'mac_croatian'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø' +\n        '¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n    'x-mac-cyrillic':  // Python: 'mac_cyrillic'\n        'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњ' +\n        'јЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю',\n    'x-mac-gaelic':\n        // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/GAELIC.TXT\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæø' +\n        'ṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n    'x-mac-greek':  // Python: 'mac_greek'\n        'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩ' +\n        'άΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n    'x-mac-icelandic':  // Python: 'mac_iceland'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-inuit':\n        // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/INUIT.TXT\n        'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗ' +\n        'ᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n    'x-mac-ce':  // Python: 'mac_latin2'\n        'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅ' +\n        'ņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n    macintosh:  // Python: 'mac_roman'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-romanian':  // Python: 'mac_romanian'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-turkish':  // Python: 'mac_turkish'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\n/**\n * Decodes an old-style Macintosh string. Returns either a Unicode JavaScript\n * string, or 'undefined' if the encoding is unsupported. For example, we do\n * not support Chinese, Japanese or Korean because these would need large\n * mapping tables.\n * @param {DataView} dataView\n * @param {number} offset\n * @param {number} dataLength\n * @param {string} encoding\n * @returns {string}\n */\ndecode.MACSTRING = function(dataView, offset, dataLength, encoding) {\n    var table = eightBitMacEncodings[encoding];\n    if (table === undefined) {\n        return undefined;\n    }\n\n    var result = '';\n    for (var i = 0; i < dataLength; i++) {\n        var c = dataView.getUint8(offset + i);\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c <= 0x7F) {\n            result += String.fromCharCode(c);\n        } else {\n            result += table[c & 0x7F];\n        }\n    }\n\n    return result;\n};\n\n// Helper function for encode.MACSTRING. Returns a dictionary for mapping\n// Unicode character codes to their 8-bit MacOS equivalent. This table\n// is not exactly a super cheap data structure, but we do not care because\n// encoding Macintosh strings is only rarely needed in typical applications.\nvar macEncodingTableCache = typeof WeakMap === 'function' && new WeakMap();\nvar macEncodingCacheKeys;\nvar getMacEncodingTable = function(encoding) {\n    // Since we use encoding as a cache key for WeakMap, it has to be\n    // a String object and not a literal. And at least on NodeJS 2.10.1,\n    // WeakMap requires that the same String instance is passed for cache hits.\n    if (!macEncodingCacheKeys) {\n        macEncodingCacheKeys = {};\n        for (var e in eightBitMacEncodings) {\n            /*jshint -W053 */  // Suppress \"Do not use String as a constructor.\"\n            macEncodingCacheKeys[e] = new String(e);\n        }\n    }\n\n    var cacheKey = macEncodingCacheKeys[encoding];\n    if (cacheKey === undefined) {\n        return undefined;\n    }\n\n    // We can't do \"if (cache.has(key)) {return cache.get(key)}\" here:\n    // since garbage collection may run at any time, it could also kick in\n    // between the calls to cache.has() and cache.get(). In that case,\n    // we would return 'undefined' even though we do support the encoding.\n    if (macEncodingTableCache) {\n        var cachedTable = macEncodingTableCache.get(cacheKey);\n        if (cachedTable !== undefined) {\n            return cachedTable;\n        }\n    }\n\n    var decodingTable = eightBitMacEncodings[encoding];\n    if (decodingTable === undefined) {\n        return undefined;\n    }\n\n    var encodingTable = {};\n    for (var i = 0; i < decodingTable.length; i++) {\n        encodingTable[decodingTable.charCodeAt(i)] = i + 0x80;\n    }\n\n    if (macEncodingTableCache) {\n        macEncodingTableCache.set(cacheKey, encodingTable);\n    }\n\n    return encodingTable;\n};\n\n/**\n * Encodes an old-style Macintosh string. Returns a byte array upon success.\n * If the requested encoding is unsupported, or if the input string contains\n * a character that cannot be expressed in the encoding, the function returns\n * 'undefined'.\n * @param {string} str\n * @param {string} encoding\n * @returns {Array}\n */\nencode.MACSTRING = function(str, encoding) {\n    var table = getMacEncodingTable(encoding);\n    if (table === undefined) {\n        return undefined;\n    }\n\n    var result = [];\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c >= 0x80) {\n            c = table[c];\n            if (c === undefined) {\n                // str contains a Unicode character that cannot be encoded\n                // in the requested encoding.\n                return undefined;\n            }\n        }\n        result[i] = c;\n        // result.push(c);\n    }\n\n    return result;\n};\n\n/**\n * @param {string} str\n * @param {string} encoding\n * @returns {number}\n */\nsizeOf.MACSTRING = function(str, encoding) {\n    var b = encode.MACSTRING(str, encoding);\n    if (b !== undefined) {\n        return b.length;\n    } else {\n        return 0;\n    }\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\n/**\n * @param {Array} l\n * @returns {Array}\n */\nencode.INDEX = function(l) {\n    var i;\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    var offset = 1; // First offset is always 1.\n    var offsets = [offset];\n    var data = [];\n    for (i = 0; i < l.length; i += 1) {\n        var v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    var encodedOffsets = [];\n    var offSize = (1 + Math.floor(Math.log(offset) / Math.log(2)) / 8) | 0;\n    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        var encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n/**\n * Convert an object to a CFF DICT structure.\n * The keys should be numeric.\n * The values should be objects containing name / type / value.\n * @param {Object} m\n * @returns {Array}\n */\nencode.DICT = function(m) {\n    var d = [];\n    var keys = Object.keys(m);\n    var length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\n/**\n * @param {Array} v\n * @param {string}\n * @returns {Array}\n */\nencode.OPERAND = function(v, type) {\n    var d = [];\n    if (Array.isArray(type)) {\n        for (var i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else if (type === 'number') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'real') {\n            d = d.concat(encode.REAL(v));\n        } else {\n            throw new Error('Unknown operand type ' + type);\n            // FIXME Add support for booleans\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n\n/**\n * Convert a list of CharString operations to bytes.\n * @param {Array}\n * @returns {Array}\n */\nencode.CHARSTRING = function(ops) {\n    // See encode.MACSTRING for why we don't do \"if (wmm && wmm.has(ops))\".\n    if (wmm) {\n        var cachedValue = wmm.get(ops);\n        if (cachedValue !== undefined) {\n            return cachedValue;\n        }\n    }\n\n    var d = [];\n    var length = ops.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n/**\n * Convert an object containing name / type / value to bytes.\n * @param {Object}\n * @returns {Array}\n */\nencode.OBJECT = function(v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.OBJECT = function(v) {\n    var sizeOfFunction = sizeOf[v.type];\n    check.argument(sizeOfFunction !== undefined, 'No sizeOf function for type ' + v.type);\n    return sizeOfFunction(v.value);\n};\n\n/**\n * Convert a table object to bytes.\n * A table contains a list of fields containing the metadata (name, type and default value).\n * The table itself has the field values set as attributes.\n * @param {opentype.Table}\n * @returns {Array}\n */\nencode.TABLE = function(table) {\n    var d = [];\n    var length = table.fields.length;\n    var subtables = [];\n    var subtableOffsets = [];\n    var i;\n\n    for (i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type + ' (' + field.name + ')');\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        var bytes = encodingFunction(value);\n\n        if (field.type === 'TABLE') {\n            subtableOffsets.push(d.length);\n            d = d.concat([0, 0]);\n            subtables.push(bytes);\n        } else {\n            d = d.concat(bytes);\n        }\n    }\n\n    for (i = 0; i < subtables.length; i += 1) {\n        var o = subtableOffsets[i];\n        var offset = d.length;\n        check.argument(offset < 65536, 'Table ' + table.tableName + ' too big.');\n        d[o] = offset >> 8;\n        d[o + 1] = offset & 0xff;\n        d = d.concat(subtables[i]);\n    }\n\n    return d;\n};\n\n/**\n * @param {opentype.Table}\n * @returns {number}\n */\nsizeOf.TABLE = function(table) {\n    var numBytes = 0;\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var sizeOfFunction = sizeOf[field.type];\n        check.argument(sizeOfFunction !== undefined, 'No sizeOf function for field type ' + field.type + ' (' + field.name + ')');\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        numBytes += sizeOfFunction(value);\n\n        // Subtables take 2 more bytes for offsets.\n        if (field.type === 'TABLE') {\n            numBytes += 2;\n        }\n    }\n\n    return numBytes;\n};\n\nencode.RECORD = encode.TABLE;\nsizeOf.RECORD = sizeOf.TABLE;\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n"},"lineCount":866}},"error":null,"hash":"c97d7a8c43cdcb39d883adfeb384c712","cacheData":{"env":{}}}