{"id":"node_modules/opentype.js/src/tables/fvar.js","dependencies":[{"name":"C:\\Users\\student\\code\\airbnb-clone\\package.json","includedInParent":true,"mtime":1603166701328},{"name":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\package.json","includedInParent":true,"mtime":1603166700396},{"name":"../check","loc":{"line":6,"column":20},"parent":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\tables\\fvar.js","resolved":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\check.js"},{"name":"../parse","loc":{"line":7,"column":20},"parent":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\tables\\fvar.js","resolved":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\parse.js"},{"name":"../table","loc":{"line":8,"column":20},"parent":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\tables\\fvar.js","resolved":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\table.js"}],"generated":{"js":"// The `fvar` table stores font variation axes and instances.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6fvar.html\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\nfunction addName(name, names) {\n    var nameString = JSON.stringify(name);\n    var nameID = 256;\n    for (var nameKey in names) {\n        var n = parseInt(nameKey);\n        if (!n || n < 256) {\n            continue;\n        }\n\n        if (JSON.stringify(names[nameKey]) === nameString) {\n            return n;\n        }\n\n        if (nameID <= n) {\n            nameID = n + 1;\n        }\n    }\n\n    names[nameID] = name;\n    return nameID;\n}\n\nfunction makeFvarAxis(n, axis, names) {\n    var nameID = addName(axis.name, names);\n    return [\n        {name: 'tag_' + n, type: 'TAG', value: axis.tag},\n        {name: 'minValue_' + n, type: 'FIXED', value: axis.minValue << 16},\n        {name: 'defaultValue_' + n, type: 'FIXED', value: axis.defaultValue << 16},\n        {name: 'maxValue_' + n, type: 'FIXED', value: axis.maxValue << 16},\n        {name: 'flags_' + n, type: 'USHORT', value: 0},\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID}\n    ];\n}\n\nfunction parseFvarAxis(data, start, names) {\n    var axis = {};\n    var p = new parse.Parser(data, start);\n    axis.tag = p.parseTag();\n    axis.minValue = p.parseFixed();\n    axis.defaultValue = p.parseFixed();\n    axis.maxValue = p.parseFixed();\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n    axis.name = names[p.parseUShort()] || {};\n    return axis;\n}\n\nfunction makeFvarInstance(n, inst, axes, names) {\n    var nameID = addName(inst.name, names);\n    var fields = [\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID},\n        {name: 'flags_' + n, type: 'USHORT', value: 0}\n    ];\n\n    for (var i = 0; i < axes.length; ++i) {\n        var axisTag = axes[i].tag;\n        fields.push({\n            name: 'axis_' + n + ' ' + axisTag,\n            type: 'FIXED',\n            value: inst.coordinates[axisTag] << 16\n        });\n    }\n\n    return fields;\n}\n\nfunction parseFvarInstance(data, start, axes, names) {\n    var inst = {};\n    var p = new parse.Parser(data, start);\n    inst.name = names[p.parseUShort()] || {};\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n\n    inst.coordinates = {};\n    for (var i = 0; i < axes.length; ++i) {\n        inst.coordinates[axes[i].tag] = p.parseFixed();\n    }\n\n    return inst;\n}\n\nfunction makeFvarTable(fvar, names) {\n    var result = new table.Table('fvar', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'offsetToData', type: 'USHORT', value: 0},\n        {name: 'countSizePairs', type: 'USHORT', value: 2},\n        {name: 'axisCount', type: 'USHORT', value: fvar.axes.length},\n        {name: 'axisSize', type: 'USHORT', value: 20},\n        {name: 'instanceCount', type: 'USHORT', value: fvar.instances.length},\n        {name: 'instanceSize', type: 'USHORT', value: 4 + fvar.axes.length * 4}\n    ]);\n    result.offsetToData = result.sizeOf();\n\n    for (var i = 0; i < fvar.axes.length; i++) {\n        result.fields = result.fields.concat(makeFvarAxis(i, fvar.axes[i], names));\n    }\n\n    for (var j = 0; j < fvar.instances.length; j++) {\n        result.fields = result.fields.concat(makeFvarInstance(j, fvar.instances[j], fvar.axes, names));\n    }\n\n    return result;\n}\n\nfunction parseFvarTable(data, start, names) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseULong();\n    check.argument(tableVersion === 0x00010000, 'Unsupported fvar table version.');\n    var offsetToData = p.parseOffset16();\n    // Skip countSizePairs.\n    p.skip('uShort', 1);\n    var axisCount = p.parseUShort();\n    var axisSize = p.parseUShort();\n    var instanceCount = p.parseUShort();\n    var instanceSize = p.parseUShort();\n\n    var axes = [];\n    for (var i = 0; i < axisCount; i++) {\n        axes.push(parseFvarAxis(data, start + offsetToData + i * axisSize, names));\n    }\n\n    var instances = [];\n    var instanceStart = start + offsetToData + axisCount * axisSize;\n    for (var j = 0; j < instanceCount; j++) {\n        instances.push(parseFvarInstance(data, instanceStart + j * instanceSize, axes, names));\n    }\n\n    return {axes: axes, instances: instances};\n}\n\nexports.make = makeFvarTable;\nexports.parse = parseFvarTable;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/opentype.js/src/tables/fvar.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}}],"sources":{"node_modules/opentype.js/src/tables/fvar.js":"// The `fvar` table stores font variation axes and instances.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6fvar.html\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\nfunction addName(name, names) {\n    var nameString = JSON.stringify(name);\n    var nameID = 256;\n    for (var nameKey in names) {\n        var n = parseInt(nameKey);\n        if (!n || n < 256) {\n            continue;\n        }\n\n        if (JSON.stringify(names[nameKey]) === nameString) {\n            return n;\n        }\n\n        if (nameID <= n) {\n            nameID = n + 1;\n        }\n    }\n\n    names[nameID] = name;\n    return nameID;\n}\n\nfunction makeFvarAxis(n, axis, names) {\n    var nameID = addName(axis.name, names);\n    return [\n        {name: 'tag_' + n, type: 'TAG', value: axis.tag},\n        {name: 'minValue_' + n, type: 'FIXED', value: axis.minValue << 16},\n        {name: 'defaultValue_' + n, type: 'FIXED', value: axis.defaultValue << 16},\n        {name: 'maxValue_' + n, type: 'FIXED', value: axis.maxValue << 16},\n        {name: 'flags_' + n, type: 'USHORT', value: 0},\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID}\n    ];\n}\n\nfunction parseFvarAxis(data, start, names) {\n    var axis = {};\n    var p = new parse.Parser(data, start);\n    axis.tag = p.parseTag();\n    axis.minValue = p.parseFixed();\n    axis.defaultValue = p.parseFixed();\n    axis.maxValue = p.parseFixed();\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n    axis.name = names[p.parseUShort()] || {};\n    return axis;\n}\n\nfunction makeFvarInstance(n, inst, axes, names) {\n    var nameID = addName(inst.name, names);\n    var fields = [\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID},\n        {name: 'flags_' + n, type: 'USHORT', value: 0}\n    ];\n\n    for (var i = 0; i < axes.length; ++i) {\n        var axisTag = axes[i].tag;\n        fields.push({\n            name: 'axis_' + n + ' ' + axisTag,\n            type: 'FIXED',\n            value: inst.coordinates[axisTag] << 16\n        });\n    }\n\n    return fields;\n}\n\nfunction parseFvarInstance(data, start, axes, names) {\n    var inst = {};\n    var p = new parse.Parser(data, start);\n    inst.name = names[p.parseUShort()] || {};\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n\n    inst.coordinates = {};\n    for (var i = 0; i < axes.length; ++i) {\n        inst.coordinates[axes[i].tag] = p.parseFixed();\n    }\n\n    return inst;\n}\n\nfunction makeFvarTable(fvar, names) {\n    var result = new table.Table('fvar', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'offsetToData', type: 'USHORT', value: 0},\n        {name: 'countSizePairs', type: 'USHORT', value: 2},\n        {name: 'axisCount', type: 'USHORT', value: fvar.axes.length},\n        {name: 'axisSize', type: 'USHORT', value: 20},\n        {name: 'instanceCount', type: 'USHORT', value: fvar.instances.length},\n        {name: 'instanceSize', type: 'USHORT', value: 4 + fvar.axes.length * 4}\n    ]);\n    result.offsetToData = result.sizeOf();\n\n    for (var i = 0; i < fvar.axes.length; i++) {\n        result.fields = result.fields.concat(makeFvarAxis(i, fvar.axes[i], names));\n    }\n\n    for (var j = 0; j < fvar.instances.length; j++) {\n        result.fields = result.fields.concat(makeFvarInstance(j, fvar.instances[j], fvar.axes, names));\n    }\n\n    return result;\n}\n\nfunction parseFvarTable(data, start, names) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseULong();\n    check.argument(tableVersion === 0x00010000, 'Unsupported fvar table version.');\n    var offsetToData = p.parseOffset16();\n    // Skip countSizePairs.\n    p.skip('uShort', 1);\n    var axisCount = p.parseUShort();\n    var axisSize = p.parseUShort();\n    var instanceCount = p.parseUShort();\n    var instanceSize = p.parseUShort();\n\n    var axes = [];\n    for (var i = 0; i < axisCount; i++) {\n        axes.push(parseFvarAxis(data, start + offsetToData + i * axisSize, names));\n    }\n\n    var instances = [];\n    var instanceStart = start + offsetToData + axisCount * axisSize;\n    for (var j = 0; j < instanceCount; j++) {\n        instances.push(parseFvarInstance(data, instanceStart + j * instanceSize, axes, names));\n    }\n\n    return {axes: axes, instances: instances};\n}\n\nexports.make = makeFvarTable;\nexports.parse = parseFvarTable;\n"},"lineCount":140}},"error":null,"hash":"75fe9ca2f26d42934f72490df7505794","cacheData":{"env":{}}}