{"id":"node_modules/opentype.js/src/layout.js","dependencies":[{"name":"C:\\Users\\student\\code\\airbnb-clone\\package.json","includedInParent":true,"mtime":1603166701328},{"name":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\package.json","includedInParent":true,"mtime":1603166700396},{"name":"./check","loc":{"line":6,"column":20},"parent":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\layout.js","resolved":"C:\\Users\\student\\code\\airbnb-clone\\node_modules\\opentype.js\\src\\check.js"}],"generated":{"js":"// The Layout object is the prototype of Substition objects, and provides utility methods to manipulate\n// common layout tables (GPOS, GSUB, GDEF...)\n\n'use strict';\n\nvar check = require('./check');\n\nfunction searchTag(arr, tag) {\n    /* jshint bitwise: false */\n    var imin = 0;\n    var imax = arr.length - 1;\n    while (imin <= imax) {\n        var imid = (imin + imax) >>> 1;\n        var val = arr[imid].tag;\n        if (val === tag) {\n            return imid;\n        } else if (val < tag) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\nfunction binSearch(arr, value) {\n    /* jshint bitwise: false */\n    var imin = 0;\n    var imax = arr.length - 1;\n    while (imin <= imax) {\n        var imid = (imin + imax) >>> 1;\n        var val = arr[imid];\n        if (val === value) {\n            return imid;\n        } else if (val < value) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\n/**\n * @exports opentype.Layout\n * @class\n */\nfunction Layout(font, tableName) {\n    this.font = font;\n    this.tableName = tableName;\n}\n\nLayout.prototype = {\n\n    /**\n     * Binary search an object by \"tag\" property\n     * @instance\n     * @function searchTag\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {string} tag\n     * @return {number}\n     */\n    searchTag: searchTag,\n\n    /**\n     * Binary search in a list of numbers\n     * @instance\n     * @function binSearch\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {number} value\n     * @return {number}\n     */\n    binSearch: binSearch,\n\n    /**\n     * Get or create the Layout table (GSUB, GPOS etc).\n     * @param  {boolean} create - Whether to create a new one.\n     * @return {Object} The GSUB or GPOS table.\n     */\n    getTable: function(create) {\n        var layout = this.font.tables[this.tableName];\n        if (!layout && create) {\n            layout = this.font.tables[this.tableName] = this.createDefaultTable();\n        }\n        return layout;\n    },\n\n    /**\n     * Returns all scripts in the substitution table.\n     * @instance\n     * @return {Array}\n     */\n    getScriptNames: function() {\n        var layout = this.getTable();\n        if (!layout) { return []; }\n        return layout.scripts.map(function(script) {\n            return script.tag;\n        });\n    },\n\n    /**\n     * Returns the best bet for a script name.\n     * Returns 'DFLT' if it exists.\n     * If not, returns 'latn' if it exists.\n     * If neither exist, returns undefined.\n     */\n    getDefaultScriptName: function() {\n        var layout = this.getTable();\n        if (!layout) { return; }\n        var hasLatn = false;\n        for (var i = 0; i < layout.scripts.length; i++) {\n            var name = layout.scripts[i].tag;\n            if (name === 'DFLT') return name;\n            if (name === 'latn') hasLatn = true;\n        }\n        if (hasLatn) return 'latn';\n    },\n\n    /**\n     * Returns all LangSysRecords in the given script.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {boolean} create - forces the creation of this script table if it doesn't exist.\n     * @return {Object} An object with tag and script properties.\n     */\n    getScriptTable: function(script, create) {\n        var layout = this.getTable(create);\n        if (layout) {\n            script = script || 'DFLT';\n            var scripts = layout.scripts;\n            var pos = searchTag(layout.scripts, script);\n            if (pos >= 0) {\n                return scripts[pos].script;\n            } else if (create) {\n                var scr = {\n                    tag: script,\n                    script: {\n                        defaultLangSys: { reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: [] },\n                        langSysRecords: []\n                    }\n                };\n                scripts.splice(-1 - pos, 0, scr);\n                return scr.script;\n            }\n        }\n    },\n\n    /**\n     * Returns a language system table\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {boolean} create - forces the creation of this langSysTable if it doesn't exist.\n     * @return {Object}\n     */\n    getLangSysTable: function(script, language, create) {\n        var scriptTable = this.getScriptTable(script, create);\n        if (scriptTable) {\n            if (!language || language === 'dflt' || language === 'DFLT') {\n                return scriptTable.defaultLangSys;\n            }\n            var pos = searchTag(scriptTable.langSysRecords, language);\n            if (pos >= 0) {\n                return scriptTable.langSysRecords[pos].langSys;\n            } else if (create) {\n                var langSysRecord = {\n                    tag: language,\n                    langSys: { reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: [] }\n                };\n                scriptTable.langSysRecords.splice(-1 - pos, 0, langSysRecord);\n                return langSysRecord.langSys;\n            }\n        }\n    },\n\n    /**\n     * Get a specific feature table.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - One of the codes listed at https://www.microsoft.com/typography/OTSPEC/featurelist.htm\n     * @param {boolean} create - forces the creation of the feature table if it doesn't exist.\n     * @return {Object}\n     */\n    getFeatureTable: function(script, language, feature, create) {\n        var langSysTable = this.getLangSysTable(script, language, create);\n        if (langSysTable) {\n            var featureRecord;\n            var featIndexes = langSysTable.featureIndexes;\n            var allFeatures = this.font.tables[this.tableName].features;\n            // The FeatureIndex array of indices is in arbitrary order,\n            // even if allFeatures is sorted alphabetically by feature tag.\n            for (var i = 0; i < featIndexes.length; i++) {\n                featureRecord = allFeatures[featIndexes[i]];\n                if (featureRecord.tag === feature) {\n                    return featureRecord.feature;\n                }\n            }\n            if (create) {\n                var index = allFeatures.length;\n                // Automatic ordering of features would require to shift feature indexes in the script list.\n                check.assert(index === 0 || feature >= allFeatures[index - 1].tag, 'Features must be added in alphabetical order.');\n                featureRecord = {\n                    tag: feature,\n                    feature: { params: 0, lookupListIndexes: [] }\n                };\n                allFeatures.push(featureRecord);\n                featIndexes.push(index);\n                return featureRecord.feature;\n            }\n        }\n    },\n\n    /**\n     * Get the lookup tables of a given type for a script/language/feature.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - 4-letter feature code\n     * @param {number} lookupType - 1 to 8\n     * @param {boolean} create - forces the creation of the lookup table if it doesn't exist, with no subtables.\n     * @return {Object[]}\n     */\n    getLookupTables: function(script, language, feature, lookupType, create) {\n        var featureTable = this.getFeatureTable(script, language, feature, create);\n        var tables = [];\n        if (featureTable) {\n            var lookupTable;\n            var lookupListIndexes = featureTable.lookupListIndexes;\n            var allLookups = this.font.tables[this.tableName].lookups;\n            // lookupListIndexes are in no particular order, so use na√Øve search.\n            for (var i = 0; i < lookupListIndexes.length; i++) {\n                lookupTable = allLookups[lookupListIndexes[i]];\n                if (lookupTable.lookupType === lookupType) {\n                    tables.push(lookupTable);\n                }\n            }\n            if (tables.length === 0 && create) {\n                lookupTable = {\n                    lookupType: lookupType,\n                    lookupFlag: 0,\n                    subtables: [],\n                    markFilteringSet: undefined\n                };\n                var index = allLookups.length;\n                allLookups.push(lookupTable);\n                lookupListIndexes.push(index);\n                return [lookupTable];\n            }\n        }\n        return tables;\n    },\n\n    /**\n     * Returns the list of glyph indexes of a coverage table.\n     * Format 1: the list is stored raw\n     * Format 2: compact list as range records.\n     * @instance\n     * @param  {Object} coverageTable\n     * @return {Array}\n     */\n    expandCoverage: function(coverageTable) {\n        if (coverageTable.format === 1) {\n            return coverageTable.glyphs;\n        } else {\n            var glyphs = [];\n            var ranges = coverageTable.ranges;\n            for (var i = 0; i < ranges; i++) {\n                var range = ranges[i];\n                var start = range.start;\n                var end = range.end;\n                for (var j = start; j <= end; j++) {\n                    glyphs.push(j);\n                }\n            }\n            return glyphs;\n        }\n    }\n\n};\n\nmodule.exports = Layout;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/opentype.js/src/layout.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/opentype.js/src/layout.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}}],"sources":{"node_modules/opentype.js/src/layout.js":"// The Layout object is the prototype of Substition objects, and provides utility methods to manipulate\n// common layout tables (GPOS, GSUB, GDEF...)\n\n'use strict';\n\nvar check = require('./check');\n\nfunction searchTag(arr, tag) {\n    /* jshint bitwise: false */\n    var imin = 0;\n    var imax = arr.length - 1;\n    while (imin <= imax) {\n        var imid = (imin + imax) >>> 1;\n        var val = arr[imid].tag;\n        if (val === tag) {\n            return imid;\n        } else if (val < tag) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\nfunction binSearch(arr, value) {\n    /* jshint bitwise: false */\n    var imin = 0;\n    var imax = arr.length - 1;\n    while (imin <= imax) {\n        var imid = (imin + imax) >>> 1;\n        var val = arr[imid];\n        if (val === value) {\n            return imid;\n        } else if (val < value) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\n/**\n * @exports opentype.Layout\n * @class\n */\nfunction Layout(font, tableName) {\n    this.font = font;\n    this.tableName = tableName;\n}\n\nLayout.prototype = {\n\n    /**\n     * Binary search an object by \"tag\" property\n     * @instance\n     * @function searchTag\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {string} tag\n     * @return {number}\n     */\n    searchTag: searchTag,\n\n    /**\n     * Binary search in a list of numbers\n     * @instance\n     * @function binSearch\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {number} value\n     * @return {number}\n     */\n    binSearch: binSearch,\n\n    /**\n     * Get or create the Layout table (GSUB, GPOS etc).\n     * @param  {boolean} create - Whether to create a new one.\n     * @return {Object} The GSUB or GPOS table.\n     */\n    getTable: function(create) {\n        var layout = this.font.tables[this.tableName];\n        if (!layout && create) {\n            layout = this.font.tables[this.tableName] = this.createDefaultTable();\n        }\n        return layout;\n    },\n\n    /**\n     * Returns all scripts in the substitution table.\n     * @instance\n     * @return {Array}\n     */\n    getScriptNames: function() {\n        var layout = this.getTable();\n        if (!layout) { return []; }\n        return layout.scripts.map(function(script) {\n            return script.tag;\n        });\n    },\n\n    /**\n     * Returns the best bet for a script name.\n     * Returns 'DFLT' if it exists.\n     * If not, returns 'latn' if it exists.\n     * If neither exist, returns undefined.\n     */\n    getDefaultScriptName: function() {\n        var layout = this.getTable();\n        if (!layout) { return; }\n        var hasLatn = false;\n        for (var i = 0; i < layout.scripts.length; i++) {\n            var name = layout.scripts[i].tag;\n            if (name === 'DFLT') return name;\n            if (name === 'latn') hasLatn = true;\n        }\n        if (hasLatn) return 'latn';\n    },\n\n    /**\n     * Returns all LangSysRecords in the given script.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {boolean} create - forces the creation of this script table if it doesn't exist.\n     * @return {Object} An object with tag and script properties.\n     */\n    getScriptTable: function(script, create) {\n        var layout = this.getTable(create);\n        if (layout) {\n            script = script || 'DFLT';\n            var scripts = layout.scripts;\n            var pos = searchTag(layout.scripts, script);\n            if (pos >= 0) {\n                return scripts[pos].script;\n            } else if (create) {\n                var scr = {\n                    tag: script,\n                    script: {\n                        defaultLangSys: { reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: [] },\n                        langSysRecords: []\n                    }\n                };\n                scripts.splice(-1 - pos, 0, scr);\n                return scr.script;\n            }\n        }\n    },\n\n    /**\n     * Returns a language system table\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {boolean} create - forces the creation of this langSysTable if it doesn't exist.\n     * @return {Object}\n     */\n    getLangSysTable: function(script, language, create) {\n        var scriptTable = this.getScriptTable(script, create);\n        if (scriptTable) {\n            if (!language || language === 'dflt' || language === 'DFLT') {\n                return scriptTable.defaultLangSys;\n            }\n            var pos = searchTag(scriptTable.langSysRecords, language);\n            if (pos >= 0) {\n                return scriptTable.langSysRecords[pos].langSys;\n            } else if (create) {\n                var langSysRecord = {\n                    tag: language,\n                    langSys: { reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: [] }\n                };\n                scriptTable.langSysRecords.splice(-1 - pos, 0, langSysRecord);\n                return langSysRecord.langSys;\n            }\n        }\n    },\n\n    /**\n     * Get a specific feature table.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - One of the codes listed at https://www.microsoft.com/typography/OTSPEC/featurelist.htm\n     * @param {boolean} create - forces the creation of the feature table if it doesn't exist.\n     * @return {Object}\n     */\n    getFeatureTable: function(script, language, feature, create) {\n        var langSysTable = this.getLangSysTable(script, language, create);\n        if (langSysTable) {\n            var featureRecord;\n            var featIndexes = langSysTable.featureIndexes;\n            var allFeatures = this.font.tables[this.tableName].features;\n            // The FeatureIndex array of indices is in arbitrary order,\n            // even if allFeatures is sorted alphabetically by feature tag.\n            for (var i = 0; i < featIndexes.length; i++) {\n                featureRecord = allFeatures[featIndexes[i]];\n                if (featureRecord.tag === feature) {\n                    return featureRecord.feature;\n                }\n            }\n            if (create) {\n                var index = allFeatures.length;\n                // Automatic ordering of features would require to shift feature indexes in the script list.\n                check.assert(index === 0 || feature >= allFeatures[index - 1].tag, 'Features must be added in alphabetical order.');\n                featureRecord = {\n                    tag: feature,\n                    feature: { params: 0, lookupListIndexes: [] }\n                };\n                allFeatures.push(featureRecord);\n                featIndexes.push(index);\n                return featureRecord.feature;\n            }\n        }\n    },\n\n    /**\n     * Get the lookup tables of a given type for a script/language/feature.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - 4-letter feature code\n     * @param {number} lookupType - 1 to 8\n     * @param {boolean} create - forces the creation of the lookup table if it doesn't exist, with no subtables.\n     * @return {Object[]}\n     */\n    getLookupTables: function(script, language, feature, lookupType, create) {\n        var featureTable = this.getFeatureTable(script, language, feature, create);\n        var tables = [];\n        if (featureTable) {\n            var lookupTable;\n            var lookupListIndexes = featureTable.lookupListIndexes;\n            var allLookups = this.font.tables[this.tableName].lookups;\n            // lookupListIndexes are in no particular order, so use na√Øve search.\n            for (var i = 0; i < lookupListIndexes.length; i++) {\n                lookupTable = allLookups[lookupListIndexes[i]];\n                if (lookupTable.lookupType === lookupType) {\n                    tables.push(lookupTable);\n                }\n            }\n            if (tables.length === 0 && create) {\n                lookupTable = {\n                    lookupType: lookupType,\n                    lookupFlag: 0,\n                    subtables: [],\n                    markFilteringSet: undefined\n                };\n                var index = allLookups.length;\n                allLookups.push(lookupTable);\n                lookupListIndexes.push(index);\n                return [lookupTable];\n            }\n        }\n        return tables;\n    },\n\n    /**\n     * Returns the list of glyph indexes of a coverage table.\n     * Format 1: the list is stored raw\n     * Format 2: compact list as range records.\n     * @instance\n     * @param  {Object} coverageTable\n     * @return {Array}\n     */\n    expandCoverage: function(coverageTable) {\n        if (coverageTable.format === 1) {\n            return coverageTable.glyphs;\n        } else {\n            var glyphs = [];\n            var ranges = coverageTable.ranges;\n            for (var i = 0; i < ranges; i++) {\n                var range = ranges[i];\n                var start = range.start;\n                var end = range.end;\n                for (var j = start; j <= end; j++) {\n                    glyphs.push(j);\n                }\n            }\n            return glyphs;\n        }\n    }\n\n};\n\nmodule.exports = Layout;\n"},"lineCount":283}},"error":null,"hash":"b54686f2afa4aae501a975d6e481fc16","cacheData":{"env":{}}}